function Import-LockpathConfiguration {
    [CmdletBinding(SupportsShouldProcess)]
    [Diagnostics.CodeAnalysis.SuppressMessageAttribute("PSShouldProcess", "", Justification = "Methods called within here make use of PSShouldProcess, and the switch is passed on to them inherently.")]
    param(
        [string] $Path
    )

    # Create a configuration object with all the default values.  We can then update the values
    # with any that we find on disk.
    $logPath = [String]::Empty
    $documentsFolder = [System.Environment]::GetFolderPath('MyDocuments')
    if (-not [System.String]::IsNullOrEmpty($documentsFolder)) {
        $logPath = Join-Path -Path $documentsFolder -ChildPath 'PowerShellForGitHub.log'
    }

    $config = [PSCustomObject]@{
        'apiHostName'               = 'github.com'
        'applicationInsightsKey'    = '66d83c52-3070-489b-886b-09860e05e78a'
        'assemblyPath'              = [String]::Empty
        'disableLogging'            = ([String]::IsNullOrEmpty($logPath))
        'disablePiiProtection'      = $false
        'disableSmarterObjects'     = $false
        'disableTelemetry'          = $false
        'defaultNoStatus'           = $false
        'defaultOwnerName'          = [String]::Empty
        'defaultRepositoryName'     = [String]::Empty
        'logPath'                   = $logPath
        'logProcessId'              = $false
        'logRequestBody'            = $false
        'logTimeAsUtc'              = $false
        'retryDelaySeconds'         = 30
        'suppressNoPasswordWarning' = $false
        'suppressTelemetryReminder' = $false
        'webRequestTimeoutSec'      = 0

        # This hash is generated by using Helper.ps1's Get-Sha512Hash in Tests/Config/Settings.ps1 like so:
        #    . ./Helpers.ps1; Get-Sha512Hash -PlainText (Get-Content -Path ./Tests/Config/Settings.ps1 -Raw -Encoding Utf8)
        # The hash is used to identify if the user has made changes to the config file prior to running the UT's locally.
        # It intentionally cannot be modified via Set-LockpathConfiguration and must be updated directly in the
        # source code here should the default Settings.ps1 file ever be changed.
        'testConfigSettingsHash'    = 'A76CA42A587D10247F887F9257DB7BF5F988E8714A7C0E29D7B100A20F5D35B8E3306AC5B9BBC8851EC19846A90BB3C80FC7C594D0347A772B2B10BADB1B3E68'
    }

    $jsonObject = Read-LockpathConfiguration -Path $Path
    Get-Member -InputObject $config -MemberType NoteProperty |
    ForEach-Object {
        $name = $_.Name
        $type = $config.$name.GetType().Name
        $config.$name = Resolve-PropertyValue -InputObject $jsonObject -Name $name -Type $type -DefaultValue $config.$name
    }

    return $config
}
